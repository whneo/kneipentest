<?php
// globale Klasse importieren, geht auch ohne
//use PDO;

// datenbank connect
$db = new PDO('mysql:host=localhost;dbname=pdotest;charset=utf8', 'root', '');

$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
$db->setAttribute(PDO::ATTR_EMULATE_PREPARES, FALSE);

// Abfrage
//try {
//    $db->query('hi');
//} catch (PDOException $ex) {
//    //echo $ex->getTraceAsString();
//    echo "Fehler ist eingetreten";
//}

// sql statement mit prepared statements
//$stmt = $db->prepare("SELECT * FROM test");
//$stmt->execute();
//$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);

// Abfrage z.B. fÃ¼r Authentifizierung
$id = 1;
$name = 'abc';
//$stmt = $db->prepare("SELECT * FROM test WHERE id=? AND name=?");
//$stmt->bindValue(1, $id, PDO::PARAM_INT);
//$stmt->bindValue(2, $name, PDO::PARAM_STR);
//$stmt->execute();
//$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);

$stmt = $db->prepare("SELECT * FROM test WHERE id=:id AND name=:name");
$stmt->execute(array(':name' => $name, ':id' => $id));
$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);


echo '<pre>';
print_r($rows);
echo '</pre>';

// INSERT
//$stmt = $db->prepare("INSERT INTO test(id, name) VALUES(:field1,:field2)");
//$stmt->execute([':field1' => NULL, ':field2' => 'ghi']);
//$affected_rows = $stmt->rowCount();
//$insertId = $db->lastInsertId();
//echo $insertId;

// UPDATE
//$stmt = $db->prepare("UPDATE test SET name=? WHERE id=?");
//$stmt->execute(['xxx', 3]);
//$affected_rows = $stmt->rowCount();

// DELETE
//$id = 3;
//$stmt = $db->prepare("DELETE FROM test WHERE id=:id");
//$stmt->bindValue(':id', $id, PDO::PARAM_INT);
//$stmt->execute();
//$affected_rows = $stmt->rowCount();

// Suche mit LIKE
$stmt = $db->prepare("SELECT name FROM test WHERE name LIKE ?");
$search = 'b';
$stmt->bindValue(1, "%$search%", PDO::PARAM_STR);
$stmt->execute();
$rows = $stmt->fetchAll(PDO::FETCH_ASSOC);

echo '<pre>';
print_r($rows);
echo '</pre>';

// sql mit Transaktion
try {
    $db->beginTransaction();
    $db->exec("QUERY");
    $stmt = $db->prepare("ANOTHER QUERY");
    $stmt->execute(array($value));
    $stmt = $db->prepare("YET ANOTHER QUERY");
    $stmt->execute(array($value2, $value3));
    
    $db->commit();
} catch (Exception $ex) {
    $db->rollBack();
    echo $ex->getMessage();
}
